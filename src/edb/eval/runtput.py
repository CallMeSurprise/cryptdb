#!/usr/bin/python


# To run tput test
# install phpBB on CryptDB and run the trace generated by createstate.py through the proxy
# login as admin and give permissions to newly registered users to read and write posts 
# (for example, a simple way, go to admin panel, select groups, newly registered users, all features) 
# send at least one private message to each user, say have the admin do this by sending to more at once
# set limit of priv msgs to 1000

import sys
import os
import time

baseusername = "user"
basecookie = "cookie"
basehtml = "htmlfile"

noreadm = 1
noreadp = 1
noreadm = 1
nowritem = 1

#      no_read_m noreadp  nowritem nowritep  norepeats
task = " 5        5        1        1         1     "  


def getuserfile(basefile, u, i):
	return basefile + repr(u) + "_" + repr(i)

def getusername(u):
	return baseusername + repr(u)


def worker(u, i):
	username =  getusername(u)
	# if even, do write first, else do reads first
	query = "python run_tests.py " + username  +" " +  task  + getuserfile(basehtml, u, i) + " " + getuserfile(basecookie, u, i)
	if u % 2 == 0:
		query = query + " 1 " # do reads first
	else:
		query = query + " 0 " # do writes first
		
	print query
	result = os.system(query);
	print 'and the result is ' +  repr(result)

	sys.exit(1)

def main(arg):
	
	if len(arg) != 4:
		print("wrong number of arguments: runtput.py nousers useridstart noinstancesperuser")
		return 
	
	users = int(arg[1])
	useridstart = int(arg[2])
	print 'users ' +  repr(users)
	instances = int(arg[3])
	print 'instances ' + repr(instances)
	
	pids = {}
	
	index = -1
	
	start = time.time()
	
	for u in range(0, users):
		for i in range(0, instances):
			index = index + 1
			pid = os.fork()
			if pid>0:
				#in parent now
				pids[index] = pid
			else:  
				#out of parent
				worker(u+useridstart,i)
				
	index = -1
	
	for u in range(0, users):
		for i in range(0, instances):
			index = index + 1
			os.waitpid(pids[index], 0)
			print 'done'
			print 'user ' + repr(i) + ' instance  ' + repr(i) + 'finished'
    		
	end = time.time()
	print 'interval of time is ' + repr(end-start) 		
 
main(sys.argv)  